[[docker-letsencrypt-nginx-proxy-companion-examples]]
== Deploy frontend proxy with letsencrypt and ownCloud service

Generic examples:
https://github.com/fatk/docker-letsencrypt-nginx-proxy-companion-examples/blob/master/docker-compose/v2/simple-site/docker-compose.yml

=== Create bridge network for frontend

----
docker network create -d bridge frontend
----

=== Run nginx, nginx-gen and letsencrypt-nginx-proxy-companion with docker-compose

.docker-compose.yml for frontend proxy
[source,bash]
----
version: "2"

services:
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./certs:/etc/nginx/certs:ro"
    networks:
      - frontend
    restart: always

  nginx-gen:
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./templates/nginx-compose-v2.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    restart: always

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
    restart: always

networks:
  frontend:
    external:
      name: frontend

----

=== Run frontend proxy

----
docker-compose up -d
----

=== Create backend network

----
docker network create -d bridge backend
----

=== Run ownCloud

.docker-compose.yml for ownCloud
[source,bash]
----
version: '2'

services:
  lb:
    image: dockercloud/haproxy
    environment:
      - VIRTUAL_HOST=cloud.example.com
      - VIRTUAL_NETWORK=frontend
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=cloud.example.com
      - LETSENCRYPT_EMAIL=me@example.com
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - owncloud
    links:
      - owncloud
    networks:
      - frontend
      - backend
    restart: always

  owncloud:
    image: owncloud
    volumes:
      - files:/var/www/html/data
      - files:/var/www/html/config
    links:
      - postgres:owncloud-db
    networks:
      - backend
    restart: always

  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=mysecretpassword
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - backend
    restart: always

volumes:
  database:
    driver: local
  files:
    driver: local

networks:
  frontend:
    external:
      name: frontend
  backend:
    external:
      name: backend

----
